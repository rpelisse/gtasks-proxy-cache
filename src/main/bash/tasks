#!/bin/bash
set -euo pipefail

readonly GTASK_PROXY_URL='http://127.0.0.1:2333/tasks'
readonly RESULT_FILE='/tmp/tasks.output'

usage() {
  echo 'TODO'
}

encode_chars_for_url() {
  local string="${1}"

  echo "${string}" | sed -e 's; ;%20;g' -e 's;/;%2F;g'
}


call_gtasksks_proxy() {
  local path=${1}
  local method=${2:-'GET'}
  local data=${3}
  local content_type=${4:-'text/plain'}

  if [ -n "${data}" ]; then
      set_content_type="-H Content-Type: ${content_type}"
      set_data="-d ${data}"
  else
      set_content_type=""
  fi

  status=$(expr 0 + $(curl -s -w "%{http_code}\n" -X "${method}" ${set_content_type} "${GTASK_PROXY_URL}/${1}" ${set_data}-o "${RESULT_FILE}"))
  if [[ ${status} =~ ^2[0-9][0-9]$ ]] ; then
    cat "${RESULT_FILE}"
    exit 0
  else
    echo "Request failed with status:${status}."
    exit "${status}"
  fi
}

task_to_perform='none'
while getopts hlrtda:i:n:ip:bos:S:D:T: OPT; do
  case "$OPT" in
    l)
        call_gtasksks_proxy 'list/today'
        ;;
    t)
        call_gtasksks_proxy 'list/tomorrow'
		;;
    o)
        call_gtasksks_proxy 'list/overdue'
        ;;
    r)
        call_gtasksks_proxy 'refresh' 'POST'
        ;;
    i)
        TASK_ID="${OPTARG}"
        ;;
    d)
        task_to_perform='delete'
        ;;
    a)
        task_to_perform='add-task'
        readonly TASK_TITLE="${OPTARG}"
        ;;
    n)
        NOTES="${OPTARG}"
        ;;
    p)
        POSTPONE_TO="${OPTARG}"
        ;;
    b)
        task_to_perform='bump'
        ;;
    s)
        call_gtasksks_proxy "search/title/$(encode_chars_for_url ${OPTARG})"
        ;;
    S)
        call_gtasksks_proxy "search/notes/$(encode_chars_for_url ${OPTARG})"
        ;;
    D)
        call_gtasksks_proxy "desc/$(encode_chars_for_url ${OPTARG})"
        echo ''
        ;;
    T)
        task_to_perform='tag'
        tag_id="${OPTARG}"
        if [ -z "${tag_id}" ]; then
          echo "Missing tag id! Aborting."
          exit 5
        fi
        ;;
    h)
        usage
        exit 0
        ;;
  esac
done

readonly NOTES=${NOTES:-""}
if [ -n "${TASK_ID}" -a -n "${NOTES}" ] ; then
  call_gtasksks_proxy "/notes/${TASK_ID}" 'POST' "${NOTES}"
fi

if [ "${task_to_perform}" = 'add-task' ]; then
    call_gtasksks_proxy $(encode_chars_for_url "${TASK_TITLE}")/$(encode_chars_for_url "${NOTES}") 'PUT'
fi

# the next tasks requires to have a task id set
readonly TASK_ID=${TASK_ID:-""}
if [ -z "${TASK_ID}" ] ; then
  echo "This action requires to give a task Id."
  exit 1
fi

readonly POSTPONE_TO="${POSTPONE_TO:-1}"

if [ "${task_to_perform}" = 'bump' ]; then
  call_gtasksks_proxy "bump/to/${TASK_ID}/${POSTPONE_TO}" 'POST'
fi

if [ "${task_to_perform}" = 'delete' ]; then
  call_gtasksks_proxy "delete/${TASK_ID}" 'DELETE'
fi

if [ "${task_to_perform}" = 'tag' ]; then
  call_gtasksks_proxy "tag/${TASK_ID}/${tag_id}" 'POST'
fi
